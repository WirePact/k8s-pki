name: Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  get_next_version:
    runs-on: ubuntu-latest
    name: Fetch next version number
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: semantic release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          dry_run: true
          working_directory: .github/fetch_version

      - run: echo ${{ steps.semantic.outputs.new_release_version }}
      - run: echo ${{ steps.semantic.outputs.new_release_published }}

    outputs:
      create_release: ${{ steps.semantic.outputs.new_release_published }}
      new_version: ${{ steps.semantic.outputs.new_release_version }}

  build_images:
    needs: get_next_version
    if: needs.get_next_version.outputs.create_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          push: true
          build-args: |
            BUILD_VERSION=${{ needs.get_next_version.outputs.new_version }}
            COMMIT_SHA=${{ github.sha }}
          tags: |
            ghcr.io/wirepact/k8s-pki:latest
            ghcr.io/wirepact/k8s-pki:${{ github.sha }}
            ghcr.io/wirepact/k8s-pki:${{ needs.get_next_version.outputs.new_version }}

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
